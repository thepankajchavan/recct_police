import{i as o,j as e,x as h,R as x,p as l,C as t}from"./app-47b17f36.js";import{P as j}from"./PageBreadcrumbButton-9aff5d40.js";import{c as d}from"./colors-3635ad60.js";import{C as c}from"./index.esm-2eb557eb.js";import{T as m}from"./Table-1db830d4.js";import"./PageBreadcrumb-c0dab2ca.js";const u=()=>{const{settings:n}=o(),r=n.color,s=d[r]||r;return e.jsx(e.Fragment,{children:e.jsx(c,{value:60,text:"60%",styles:{root:{height:"15rem"},path:{stroke:s,strokeWidth:"0.375rem",strokeLinecap:"butt"},trail:{stroke:"#EDEFF1",strokeWidth:"0.375rem"},text:{fontSize:"1rem",fontWeight:"bold",fill:s}}})})},g=()=>{const{settings:n}=o(),r=n.color,s=d[r]||r;return e.jsx(e.Fragment,{children:e.jsx(c,{value:60,text:"60%",styles:{root:{height:"15rem"},path:{stroke:s,strokeWidth:"0.375rem",strokeLinecap:"round"},trail:{stroke:"#EDEFF1",strokeWidth:"0.15rem"},text:{fontSize:"1rem",fontWeight:"bold",fill:s}}})})},p=()=>{const{settings:n}=o(),r=n.color,s=d[r]||r;return e.jsx(e.Fragment,{children:e.jsx(c,{value:60,text:"60%",strokeWidth:50,styles:{root:{height:"15rem"},path:{stroke:s,strokeLinecap:"butt"},trail:{stroke:"#EDEFF1"},text:{fontSize:"1rem",fontWeight:"bold",fill:s}}})})};class a extends h.Component{constructor(){super(...arguments),this.state={valuesIndex:0}}componentDidMount(){setInterval(()=>{this.setState({valuesIndex:(this.state.valuesIndex+1)%this.props.values.length})},this.props.interval)}render(){return this.props.children(this.props.values[this.state.valuesIndex])}}a.defaultProps={interval:1e3};const b=()=>{const{settings:n}=o(),r=n.color,s=d[r]||r;return e.jsx(e.Fragment,{children:e.jsx(a,{values:[0,20,40,60,80,100],children:i=>e.jsx(c,{value:i,text:`${i}%`,styles:{root:{height:"15rem"},path:{stroke:s,strokeWidth:"0.375rem"},trail:{stroke:"#EDEFF1",strokeWidth:"0.375rem"},text:{fontSize:"1rem",fontWeight:"bold",fill:s}}})})})},f=()=>{const{settings:n}=o(),r=n.color,s=d[r]||r;return e.jsx(e.Fragment,{children:e.jsx(a,{values:[0,100],children:i=>e.jsx(c,{value:i,text:`${i}%`,styles:{root:{height:"15rem"},path:{stroke:s,strokeWidth:"0.375rem"},trail:{stroke:"#EDEFF1",strokeWidth:"0.375rem"},text:{fontSize:"1rem",fontWeight:"bold",fill:s}}})})})},v=()=>{const{settings:n}=o(),r=n.color,s=d[r]||r;return e.jsx(e.Fragment,{children:e.jsx(a,{values:[0,10,20,30,40,50,60,70,80,90,100],children:i=>e.jsx(c,{value:i,text:`${i}%`,styles:{root:{height:"15rem"},path:{stroke:s,strokeWidth:"0.375rem"},trail:{stroke:"#EDEFF1",strokeWidth:"0.375rem"},text:{fontSize:"1rem",fontWeight:"bold",fill:s}}})})})},T=()=>e.jsxs(e.Fragment,{children:[e.jsx(j,{title:"ProgressBar",subName:"Charts",url:"https://www.kevinqi.com/react-circular-progressbar/"}),e.jsxs(x,{className:"g-3 g-md-4",children:[e.jsx(l,{md:6,lg:4,xl:6,xxl:4,children:e.jsxs(t,{children:[e.jsx(t.Header,{children:e.jsx(t.Title,{children:"Basic"})}),e.jsx(t.Body,{children:e.jsx(u,{})})]})}),e.jsx(l,{md:6,lg:4,xl:6,xxl:4,children:e.jsxs(t,{children:[e.jsx(t.Header,{children:e.jsx(t.Title,{children:"Linecap"})}),e.jsx(t.Body,{children:e.jsx(g,{})})]})}),e.jsx(l,{md:6,lg:4,xl:6,xxl:4,children:e.jsxs(t,{children:[e.jsx(t.Header,{children:e.jsx(t.Title,{children:"Filled"})}),e.jsx(t.Body,{children:e.jsx(p,{})})]})}),e.jsx(l,{md:6,lg:4,xl:6,xxl:4,children:e.jsxs(t,{children:[e.jsx(t.Header,{children:e.jsx(t.Title,{children:"Animation Speed"})}),e.jsx(t.Body,{children:e.jsx(b,{})})]})}),e.jsx(l,{md:6,lg:4,xl:6,xxl:4,children:e.jsxs(t,{children:[e.jsx(t.Header,{children:e.jsx(t.Title,{children:"Animation Returning"})}),e.jsx(t.Body,{children:e.jsx(f,{})})]})}),e.jsx(l,{md:6,lg:4,xl:6,xxl:4,children:e.jsxs(t,{children:[e.jsx(t.Header,{children:e.jsx(t.Title,{children:"Animation React Move"})}),e.jsx(t.Body,{children:e.jsx(v,{})})]})}),e.jsx(l,{xs:12,children:e.jsxs(t,{children:[e.jsx(t.Header,{children:e.jsx(t.Title,{children:"Options"})}),e.jsxs(m,{className:"mb-0",responsive:!0,children:[e.jsx("thead",{children:e.jsxs("tr",{children:[e.jsx("th",{children:"Option"}),e.jsx("th",{children:"Type"}),e.jsx("th",{children:"Default"}),e.jsx("th",{children:"Description"})]})}),e.jsxs("tbody",{children:[e.jsxs("tr",{children:[e.jsx("td",{children:"value"}),e.jsx("td",{children:"Number"}),e.jsx("td",{children:"Indeterminate"}),e.jsx("td",{children:"Current value"})]}),e.jsxs("tr",{children:[e.jsx("td",{children:"min"}),e.jsx("td",{children:"Number"}),e.jsx("td",{children:"0"}),e.jsx("td",{children:"Minimum value"})]}),e.jsxs("tr",{children:[e.jsx("td",{children:"max"}),e.jsx("td",{children:"Number"}),e.jsx("td",{children:"1"}),e.jsx("td",{children:"Maximum value"})]}),e.jsxs("tr",{children:[e.jsx("td",{children:"startAngle"}),e.jsx("td",{children:"Number"}),e.jsx("td",{children:"0"}),e.jsxs("td",{children:["Starting angle in degrees. Angle of 0 points straight up. Direction depends on"," ",e.jsx("code",{children:"anticlockwise"}),"."]})]}),e.jsxs("tr",{children:[e.jsx("td",{children:"anticlockwise"}),e.jsx("td",{children:"Boolean"}),e.jsx("td",{children:"false"}),e.jsx("td",{children:"Whether to rotate anti-clockwise (true) or clockwise (false)"})]}),e.jsxs("tr",{children:[e.jsx("td",{children:"unconstrained"}),e.jsx("td",{children:"Boolean"}),e.jsx("td",{children:"false"}),e.jsxs("td",{children:["Whether the value should be constrained between ",e.jsx("code",{children:"min"})," and"," ",e.jsx("code",{children:"max"}),". If false, values over ",e.jsx("code",{children:"max"})," will be truncated to"," ",e.jsx("code",{children:"max"})," and values under ",e.jsx("code",{children:"min"})," will be set to"," ",e.jsx("code",{children:"min"}),"."]})]}),e.jsxs("tr",{children:[e.jsx("td",{children:"indeterminateText"}),e.jsx("td",{children:"String"}),e.jsx("td",{children:"'?'"}),e.jsx("td",{children:"Text to display as the value when it is indeterminate"})]}),e.jsxs("tr",{children:[e.jsx("td",{children:"textFormat"}),e.jsx("td",{children:"String or Function"}),e.jsx("td",{children:"'horizontal'"}),e.jsxs("td",{children:["Text layout for value, min, max. ",e.jsx("br",{}),"You can pass either one of the possible keywords: ",e.jsx("br",{}),e.jsx("code",{children:"horizontal"})," - ",e.jsx("samp",{children:"value/max"})," ",e.jsx("br",{}),e.jsx("code",{children:"vertical"})," - value is shown over max ",e.jsx("br",{}),e.jsx("code",{children:"percent"})," - ",e.jsx("samp",{children:"value%"})," ",e.jsx("br",{}),e.jsx("code",{children:"value"})," - only value is shown ",e.jsx("br",{}),e.jsx("code",{children:"valueOnCircle"})," - the value is painted on top of the filled region on the circle ",e.jsx("br",{}),e.jsx("code",{children:"none"})," - no text is shown. ",e.jsx("br",{}),"Alternatively you can provide your own function, which will be called each time progress is updated with value and max as arguments, and is expected to return a string of HTML to insert in the center of the progress circle."," ",e.jsx("strong",{children:"Attention! The string returned from your function will be inserted as HTML. Do not pass any dynamic content such as variables coming from elsewhere to avoid XSS vulnerability."})]})]}),e.jsxs("tr",{children:[e.jsx("td",{children:"animation"}),e.jsx("td",{children:"String or Function"}),e.jsx("td",{children:"'easeInOutCubic'"}),e.jsxs("td",{children:["Animation easing function. Can be a string keyword (see the table below for available easings) or ",e.jsx("code",{children:"'none'"}),".",e.jsx("br",{}),"Alternatively, you can pass your own function with the signature ",e.jsx("br",{}),e.jsx("code",{children:"function(time, startAngle, angleDiff, duration)"}),".",e.jsx("br",{}),"The function will be called on each animation frame with the current time (milliseconds since animation start), starting angle, difference in angle (i.e. endAngle - startAngle) and animation duration as arguments, and must return the current angle."]})]}),e.jsxs("tr",{children:[e.jsx("td",{children:"animationDuration"}),e.jsx("td",{children:"Number"}),e.jsx("td",{children:"600"}),e.jsx("td",{children:"Animation duration in milliseconds"})]})]})]})]})})]})]});export{T as default};
